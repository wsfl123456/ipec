export interface IUpdateStoreParameter {
  ipLeftPic: string,
  ipPicGuid: string,
  ipDesc: string,
  ipName: string,
  ipTypeSuperiorNumber: string,
  // ipTypeNumber: string[],
  ipTypeNumber: string,
  customTag: string[],
  // countryTypes: string[],
  countryTypes: string,
  countryNames: string,
  ipIsShow: number,
  showDate: string,
  numberEpisode: string,
  filmLength: string,
  protagonist: string,
  director: string,
  scriptwriter: string,
  companyCps: any[],
  companyFxs: any[],
  companyXfs: any[],
  ipPlatformInfoWls: any[],
  ipPlatformInfoDss: any[],
  nationality: string,
  nationalityText: string,
  profession: string,
  brokerageFirms: any[],
  birthDate: string,
  owner: any[],
  copyrightAgent: any[],
  recordCountry: string,
  isTransferable: number,
  grantedType: string[],
  authorizedLocation: any[],
  authorizedAllottedTime: string,
  intentAuthorization: any[],
  authorizedType: any[],
  prodect: any,
  investmentList: any[],

  agencyAgreement: string, // 代理协议地址
  agencyAgreementGuid: string,
  agencyAgreementName?: string,
  copyrightCertificate: string, // 版权方
  copyrightCertificateGuid: string,
  copyrightCertificateName?: string,
  ownership: string, // IP所有权
  ownershipGuid: string,
  ownershipName?: string,

  cooperationCase: any,
  detail: string,

  ipAccountInfoDTOList: any[], // 社交平台账号
}

export interface IUpdateStore {
  sublist: any[],
  childList: any[],
  selectedType: number,
  countryList: any[],
  rightIPCaseShow: boolean,
  rightIPImageShow: boolean,
  authorizedTypeList: any[],

  backup: IUpdateStoreParameter,
  current: IUpdateStoreParameter,
  getCountryList: () => Promise<void>,
  getIpSublist: () => Promise<void>,

  setIpName: (val: string) => void,
  setIpType: (val: any) => void,
  setSecondType: (v: number) => void,
  changeIpDesc: (text: string) => void,
  // setIpTypeNumber: (v: string[]) => void,
  setIpTypeNumber: (v: string) => void,
  setIpTags: (v: string[]) => void,

  // setIpCountry: (v: string[]) => void,
  setIpCountry: (v: string) => void,
  setIpIsShow: (v: number) => void,
  setShowDate: (v: string) => void,
  setNumberEpisode: (v: string) => void,
  setFilmLength: (v: string) => void,
  setProtagonist: (v: string) => void,
  setDirector: (v: string) => void,
  setScriptWriter: (v: string) => void,
  searchCompany: (companyName: string, companyType: number, stateName: string) => Promise<void>,
  setCompanyCps: (companyName: string[]) => void,
  setCompanyFxs: (companyName: string[]) => void,
  setCompanyXfs: (companyName: string[]) => void,
  setIpPlatformInfoWls: (v: string[]) => void,
  setIpPlatformInfoDss: (v: string[]) => void,
  setNationality: (v: string) => void,
  setNationalityText: (v: string) => void,
  setProfession: (v: string) => void,
  setBirthDate: (v: string) => void,
  setBrokerageFirms: (v: string[]) => void,
  setOwner: (v: string[]) => void,
  setCopyrightAgent: (v: string[]) => void,
  setRecordCountry: (v: string) => void,
  setIsTransferable: (v: number) => void,
  setGrantedType: (v: string[]) => void,
  setAuthorizedAllottedTime: (v: string) => void,
  setAuthorizedLocation: (v: string[]) => void,
  setAuthorizedType: (v: string[]) => void,
  setIntentAuthorization: (v: string[]) => void,
  setRightIPImageShow: (show: boolean) => void,
  setProdectTitle: (v: string, idx: number) => void,
  unUploadImgProdect: (idx: number) => void,
  uploadImgProdect: (file: any, idx?: number) => void,
  uploadInvestment: (file: any, id: string, ipId: string, type: number) => Promise<Boolean>,
  uploadLeft: (file: any) => void,
  setRightIPCaseShow: (v: boolean) => void,
  unUploadImgCooperationCase: (idx: number) => void,
  uploadImgCooperationCase: (file: any, idx?: number) => Promise<void>,
  setCooperationCaseTitle: (title: string, idx: number) => void,
  deleteInvestmentList: (index: number) => void,

  beforeEditIp: (ipid: string, userGuid: string) => Promise<{ status: boolean, data?: any }>,
  beforeCreateIp: (userGuid: string) => Promise<{ status: boolean, data?: any }>,
}
